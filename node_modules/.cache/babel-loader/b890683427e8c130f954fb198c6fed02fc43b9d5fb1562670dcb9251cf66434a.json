{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HI HUY\\\\my-app\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport QuestionCard from '../components/QuestionCard/QuestionCard';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState('');\n  const [newQuestion, setNewQuestion] = useState('');\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [answer, setAnswer] = useState('');\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get('https://66c2cb6dd057009ee9bdec9e.mockapi.io/api/Question/questions');\n        const questionsData = response.data;\n\n        // Fetch answers for each question\n        const answersPromises = questionsData.map(question => axios.get(`https://66c2cb6dd057009ee9bdec9e.mockapi.io/api/Question/answers?questionId=${question.id}`));\n        const answersResponses = await Promise.all(answersPromises);\n        const questionsWithAnswers = questionsData.map((question, index) => {\n          var _answersResponses$ind;\n          return {\n            ...question,\n            answer: ((_answersResponses$ind = answersResponses[index].data[0]) === null || _answersResponses$ind === void 0 ? void 0 : _answersResponses$ind.answer) || ''\n          };\n        });\n        setQuestions(questionsWithAnswers);\n      } catch (err) {\n        console.error('Error fetching questions:', err);\n        setError('Unable to load questions. Please try again later.');\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleAddQuestion = async () => {\n    if (newQuestion.trim()) {\n      try {\n        const response = await axios.post('https://66c2cb6dd057009ee9bdec9e.mockapi.io/api/Question/questions', {\n          text: newQuestion\n        });\n        setQuestions([...questions, response.data]);\n        setNewQuestion('');\n      } catch (err) {\n        console.error('Error adding question:', err);\n        setError('Unable to add question. Please try again later.');\n      }\n    } else {\n      setError('Question cannot be empty.');\n    }\n  };\n  const handleDeleteQuestion = async id => {\n    try {\n      await axios.delete(`https://66c2cb6dd057009ee9bdec9e.mockapi.io/api/Question/questions/${id}`);\n      setQuestions(questions.filter(question => question.id !== id));\n    } catch (err) {\n      console.error('Error deleting question:', err);\n      setError('Unable to delete question. Please try again later.');\n    }\n  };\n  const handleQuestionClick = question => {\n    setSelectedQuestion(question);\n    setAnswer(question.answer); // Display the answer if available\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-list\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this), questions.map(question => /*#__PURE__*/_jsxDEV(QuestionCard, {\n        question: question,\n        onDelete: handleDeleteQuestion,\n        onClick: () => handleQuestionClick(question) // Handle question click\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-question-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newQuestion,\n        onChange: e => setNewQuestion(e.target.value),\n        placeholder: \"Enter your question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), selectedQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question: \", selectedQuestion.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Answer: \", selectedQuestion.answer || 'No answer available']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"Mt7g8CnU6b5Z7RkZEMDDD4GS8DA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","Footer","QuestionCard","jsxDEV","_jsxDEV","Home","_s","questions","setQuestions","error","setError","newQuestion","setNewQuestion","selectedQuestion","setSelectedQuestion","answer","setAnswer","fetchQuestions","response","get","questionsData","data","answersPromises","map","question","id","answersResponses","Promise","all","questionsWithAnswers","index","_answersResponses$ind","err","console","handleAddQuestion","trim","post","text","handleDeleteQuestion","delete","filter","handleQuestionClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onDelete","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/HI HUY/my-app/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport QuestionCard from '../components/QuestionCard/QuestionCard';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [newQuestion, setNewQuestion] = useState('');\r\n    const [selectedQuestion, setSelectedQuestion] = useState(null);\r\n    const [answer, setAnswer] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await axios.get('https://66c2cb6dd057009ee9bdec9e.mockapi.io/api/Question/questions');\r\n                const questionsData = response.data;\r\n\r\n                // Fetch answers for each question\r\n                const answersPromises = questionsData.map(question =>\r\n                    axios.get(`https://66c2cb6dd057009ee9bdec9e.mockapi.io/api/Question/answers?questionId=${question.id}`)\r\n                );\r\n\r\n                const answersResponses = await Promise.all(answersPromises);\r\n                const questionsWithAnswers = questionsData.map((question, index) => ({\r\n                    ...question,\r\n                    answer: answersResponses[index].data[0]?.answer || ''\r\n                }));\r\n\r\n                setQuestions(questionsWithAnswers);\r\n            } catch (err) {\r\n                console.error('Error fetching questions:', err);\r\n                setError('Unable to load questions. Please try again later.');\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    const handleAddQuestion = async () => {\r\n        if (newQuestion.trim()) {\r\n            try {\r\n                const response = await axios.post('https://66c2cb6dd057009ee9bdec9e.mockapi.io/api/Question/questions', {\r\n                    text: newQuestion\r\n                });\r\n\r\n                setQuestions([...questions, response.data]);\r\n                setNewQuestion('');\r\n            } catch (err) {\r\n                console.error('Error adding question:', err);\r\n                setError('Unable to add question. Please try again later.');\r\n            }\r\n        } else {\r\n            setError('Question cannot be empty.');\r\n        }\r\n    };\r\n\r\n    const handleDeleteQuestion = async (id) => {\r\n        try {\r\n            await axios.delete(`https://66c2cb6dd057009ee9bdec9e.mockapi.io/api/Question/questions/${id}`);\r\n            setQuestions(questions.filter((question) => question.id !== id));\r\n        } catch (err) {\r\n            console.error('Error deleting question:', err);\r\n            setError('Unable to delete question. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const handleQuestionClick = (question) => {\r\n        setSelectedQuestion(question);\r\n        setAnswer(question.answer); // Display the answer if available\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"question-list\">\r\n                {error && <p className=\"error\">{error}</p>}\r\n                {questions.map((question) => (\r\n                    <QuestionCard \r\n                        key={question.id} \r\n                        question={question} \r\n                        onDelete={handleDeleteQuestion}\r\n                        onClick={() => handleQuestionClick(question)} // Handle question click\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div className=\"add-question-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newQuestion}\r\n                    onChange={(e) => setNewQuestion(e.target.value)}\r\n                    placeholder=\"Enter your question\"\r\n                />\r\n                <button onClick={handleAddQuestion}>Add Question</button>\r\n            </div>\r\n            {selectedQuestion && (\r\n                <div className=\"answer-display\">\r\n                    <h3>Question: {selectedQuestion.text}</h3>\r\n                    <p>Answer: {selectedQuestion.answer || 'No answer available'}</p>\r\n                </div>\r\n            )}\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,YAAY,MAAM,yCAAyC;AAClE,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMmB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,oEAAoE,CAAC;QACtG,MAAMC,aAAa,GAAGF,QAAQ,CAACG,IAAI;;QAEnC;QACA,MAAMC,eAAe,GAAGF,aAAa,CAACG,GAAG,CAACC,QAAQ,IAC9CzB,KAAK,CAACoB,GAAG,CAAC,+EAA+EK,QAAQ,CAACC,EAAE,EAAE,CAC1G,CAAC;QAED,MAAMC,gBAAgB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,eAAe,CAAC;QAC3D,MAAMO,oBAAoB,GAAGT,aAAa,CAACG,GAAG,CAAC,CAACC,QAAQ,EAAEM,KAAK;UAAA,IAAAC,qBAAA;UAAA,OAAM;YACjE,GAAGP,QAAQ;YACXT,MAAM,EAAE,EAAAgB,qBAAA,GAAAL,gBAAgB,CAACI,KAAK,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC,cAAAU,qBAAA,uBAA/BA,qBAAA,CAAiChB,MAAM,KAAI;UACvD,CAAC;QAAA,CAAC,CAAC;QAEHP,YAAY,CAACqB,oBAAoB,CAAC;MACtC,CAAC,CAAC,OAAOG,GAAG,EAAE;QACVC,OAAO,CAACxB,KAAK,CAAC,2BAA2B,EAAEuB,GAAG,CAAC;QAC/CtB,QAAQ,CAAC,mDAAmD,CAAC;MACjE;IACJ,CAAC;IAEDO,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIvB,WAAW,CAACwB,IAAI,CAAC,CAAC,EAAE;MACpB,IAAI;QACA,MAAMjB,QAAQ,GAAG,MAAMnB,KAAK,CAACqC,IAAI,CAAC,oEAAoE,EAAE;UACpGC,IAAI,EAAE1B;QACV,CAAC,CAAC;QAEFH,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEW,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC3CT,cAAc,CAAC,EAAE,CAAC;MACtB,CAAC,CAAC,OAAOoB,GAAG,EAAE;QACVC,OAAO,CAACxB,KAAK,CAAC,wBAAwB,EAAEuB,GAAG,CAAC;QAC5CtB,QAAQ,CAAC,iDAAiD,CAAC;MAC/D;IACJ,CAAC,MAAM;MACHA,QAAQ,CAAC,2BAA2B,CAAC;IACzC;EACJ,CAAC;EAED,MAAM4B,oBAAoB,GAAG,MAAOb,EAAE,IAAK;IACvC,IAAI;MACA,MAAM1B,KAAK,CAACwC,MAAM,CAAC,sEAAsEd,EAAE,EAAE,CAAC;MAC9FjB,YAAY,CAACD,SAAS,CAACiC,MAAM,CAAEhB,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;IACpE,CAAC,CAAC,OAAOO,GAAG,EAAE;MACVC,OAAO,CAACxB,KAAK,CAAC,0BAA0B,EAAEuB,GAAG,CAAC;MAC9CtB,QAAQ,CAAC,oDAAoD,CAAC;IAClE;EACJ,CAAC;EAED,MAAM+B,mBAAmB,GAAIjB,QAAQ,IAAK;IACtCV,mBAAmB,CAACU,QAAQ,CAAC;IAC7BR,SAAS,CAACQ,QAAQ,CAACT,MAAM,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACIX,OAAA;IAAAsC,QAAA,gBACItC,OAAA,CAACJ,MAAM;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV1C,OAAA;MAAK2C,SAAS,EAAC,eAAe;MAAAL,QAAA,GACzBjC,KAAK,iBAAIL,OAAA;QAAG2C,SAAS,EAAC,OAAO;QAAAL,QAAA,EAAEjC;MAAK;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzCvC,SAAS,CAACgB,GAAG,CAAEC,QAAQ,iBACpBpB,OAAA,CAACF,YAAY;QAETsB,QAAQ,EAAEA,QAAS;QACnBwB,QAAQ,EAAEV,oBAAqB;QAC/BW,OAAO,EAAEA,CAAA,KAAMR,mBAAmB,CAACjB,QAAQ,CAAE,CAAC;MAAA,GAHzCA,QAAQ,CAACC,EAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAInB,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN1C,OAAA;MAAK2C,SAAS,EAAC,mBAAmB;MAAAL,QAAA,gBAC9BtC,OAAA;QACI8C,IAAI,EAAC,MAAM;QACXC,KAAK,EAAExC,WAAY;QACnByC,QAAQ,EAAGC,CAAC,IAAKzC,cAAc,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAChDI,WAAW,EAAC;MAAqB;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACF1C,OAAA;QAAQ6C,OAAO,EAAEf,iBAAkB;QAAAQ,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,EACLjC,gBAAgB,iBACbT,OAAA;MAAK2C,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC3BtC,OAAA;QAAAsC,QAAA,GAAI,YAAU,EAAC7B,gBAAgB,CAACwB,IAAI;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1C1C,OAAA;QAAAsC,QAAA,GAAG,UAAQ,EAAC7B,gBAAgB,CAACE,MAAM,IAAI,qBAAqB;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CACR,eACD1C,OAAA,CAACH,MAAM;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAACxC,EAAA,CAnGID,IAAI;AAAAmD,EAAA,GAAJnD,IAAI;AAqGV,eAAeA,IAAI;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}