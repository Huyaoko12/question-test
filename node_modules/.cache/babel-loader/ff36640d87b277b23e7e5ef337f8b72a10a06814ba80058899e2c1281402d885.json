{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HI HUY\\\\my-app\\\\src\\\\pages\\\\AdminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport QuestionCard from '../components/QuestionCard/QuestionCard';\nimport './AdminPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [answer, setAnswer] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get('https://66c2cb6dd057009ee9bdec9e.mockapi.io/api/Question/questions');\n        setQuestions(response.data);\n      } catch (err) {\n        console.error('Error fetching questions:', err);\n        setError('Unable to load questions. Please try again later.');\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleQuestionClick = question => {\n    setSelectedQuestion(question);\n    setAnswer(''); // Clear the answer input when a new question is selected\n  };\n  const handleDeleteQuestion = id => {\n    setQuestions(questions.filter(question => question.id !== id));\n  };\n  const handleLikeQuestion = id => {\n    setQuestions(questions.map(question => question.id === id ? {\n      ...question,\n      likeCount: (question.likeCount || 0) + 1\n    } : question));\n  };\n  const handleSubmitAnswer = async e => {\n    e.preventDefault();\n    try {\n      // Simulate saving the answer to an API or backend\n      // await axios.post(`https://api.example.com/questions/${selectedQuestion.id}/answers`, { answer });\n\n      alert(`Answer submitted for question: ${selectedQuestion.text}`);\n\n      // Clear the selected question and answer after submission\n      setSelectedQuestion(null);\n      setAnswer('');\n    } catch (err) {\n      console.error('Error submitting answer:', err);\n      setError('Unable to submit answer. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-list\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this), questions.map(question => /*#__PURE__*/_jsxDEV(QuestionCard, {\n        question: question,\n        onDelete: handleDeleteQuestion,\n        onLike: handleLikeQuestion,\n        onClick: handleQuestionClick\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), selectedQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Answer Question: \", selectedQuestion.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitAnswer,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: answer,\n          onChange: e => setAnswer(e.target.value),\n          placeholder: \"Type your answer here...\",\n          rows: \"4\",\n          cols: \"50\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPanel, \"Aw6S2DdaX26pIzkyGrQfCuKZRJQ=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","Footer","QuestionCard","jsxDEV","_jsxDEV","AdminPanel","_s","questions","setQuestions","selectedQuestion","setSelectedQuestion","answer","setAnswer","error","setError","fetchQuestions","response","get","data","err","console","handleQuestionClick","question","handleDeleteQuestion","id","filter","handleLikeQuestion","map","likeCount","handleSubmitAnswer","e","preventDefault","alert","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onDelete","onLike","onClick","onSubmit","value","onChange","target","placeholder","rows","cols","required","type","_c","$RefreshReg$"],"sources":["C:/Users/HI HUY/my-app/src/pages/AdminPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport QuestionCard from '../components/QuestionCard/QuestionCard';\r\nimport './AdminPanel.css';\r\n\r\nconst AdminPanel = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [selectedQuestion, setSelectedQuestion] = useState(null);\r\n    const [answer, setAnswer] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await axios.get('https://66c2cb6dd057009ee9bdec9e.mockapi.io/api/Question/questions');\r\n                setQuestions(response.data);\r\n            } catch (err) {\r\n                console.error('Error fetching questions:', err);\r\n                setError('Unable to load questions. Please try again later.');\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    const handleQuestionClick = (question) => {\r\n        setSelectedQuestion(question);\r\n        setAnswer('');  // Clear the answer input when a new question is selected\r\n    };\r\n\r\n    const handleDeleteQuestion = (id) => {\r\n        setQuestions(questions.filter(question => question.id !== id));\r\n    };\r\n\r\n    const handleLikeQuestion = (id) => {\r\n        setQuestions(questions.map(question => \r\n            question.id === id ? { ...question, likeCount: (question.likeCount || 0) + 1 } : question\r\n        ));\r\n    };\r\n\r\n    const handleSubmitAnswer = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Simulate saving the answer to an API or backend\r\n            // await axios.post(`https://api.example.com/questions/${selectedQuestion.id}/answers`, { answer });\r\n\r\n            alert(`Answer submitted for question: ${selectedQuestion.text}`);\r\n\r\n            // Clear the selected question and answer after submission\r\n            setSelectedQuestion(null);\r\n            setAnswer('');\r\n        } catch (err) {\r\n            console.error('Error submitting answer:', err);\r\n            setError('Unable to submit answer. Please try again later.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"question-list\">\r\n                {error && <p className=\"error\">{error}</p>}\r\n                {questions.map((question) => (\r\n                    <QuestionCard\r\n                        key={question.id}\r\n                        question={question}\r\n                        onDelete={handleDeleteQuestion}\r\n                        onLike={handleLikeQuestion}\r\n                        onClick={handleQuestionClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {selectedQuestion && (\r\n                <div className=\"answer-form\">\r\n                    <h3>Answer Question: {selectedQuestion.text}</h3>\r\n                    <form onSubmit={handleSubmitAnswer}>\r\n                        <textarea\r\n                            value={answer}\r\n                            onChange={(e) => setAnswer(e.target.value)}\r\n                            placeholder=\"Type your answer here...\"\r\n                            rows=\"4\"\r\n                            cols=\"50\"\r\n                            required\r\n                        />\r\n                        <br />\r\n                        <button type=\"submit\">Submit Answer</button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}